/**
 * Copyright (C) 2017 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.blackducksoftware.integration.hub.alert.datasource.entity;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "vulnerabilities", schema = "notification")
public class VulnerabilityEntity implements Serializable {
    private static final long serialVersionUID = -6316482235842086632L;

    @Id
    @GeneratedValue
    @Column(name = "id")
    private Long id;

    @Column(name = "vulnerability_id")
    private String vulnerabilityId;

    @Column(name = "operation")
    private String operation;

    protected VulnerabilityEntity() {

    }

    public VulnerabilityEntity(final String vulnerabilityId, final String vulnerabilityOperation) {
        this.vulnerabilityId = vulnerabilityId;
        this.operation = vulnerabilityOperation;
    }

    public Long getId() {
        return id;
    }

    public String getVulnerabilityId() {
        return vulnerabilityId;
    }

    public String getOperation() {
        return operation;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((vulnerabilityId == null) ? 0 : vulnerabilityId.hashCode());
        result = prime * result + ((operation == null) ? 0 : operation.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final VulnerabilityEntity other = (VulnerabilityEntity) obj;
        if (id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!id.equals(other.id)) {
            return false;
        }
        if (vulnerabilityId == null) {
            if (other.vulnerabilityId != null) {
                return false;
            }
        } else if (!vulnerabilityId.equals(other.vulnerabilityId)) {
            return false;
        }
        if (operation == null) {
            if (other.operation != null) {
                return false;
            }
        } else if (!operation.equals(other.operation)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "VulnerabilityEntity [id=" + id + ", vulnerabilityId=" + vulnerabilityId + ", operation=" + operation + "]";
    }
}
