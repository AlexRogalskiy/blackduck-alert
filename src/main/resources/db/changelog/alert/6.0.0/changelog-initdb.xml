<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">
    <!-- Create any tables from 5.3.0 if they do not exist -->
    <changeSet author="gavink" id="2019-12-11-10-36-41-047">
        <sql dbms="postgresql" stripComments="true">
            CREATE SCHEMA IF NOT EXISTS ALERT;
            CREATE SCHEMA IF NOT EXISTS PUBLIC;

            create table if not exists ALERT.PROVIDER_PROJECTS
            (
                ID                  SERIAL,
                NAME                VARCHAR(255),
                DESCRIPTION         VARCHAR(255),
                HREF                VARCHAR(255),
                PROJECT_OWNER_EMAIL VARCHAR(255),
                PROVIDER            VARCHAR(255),
                constraint BLACKDUCK_PROJECT_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.PROVIDER_USERS
            (
                ID            SERIAL,
                EMAIL_ADDRESS VARCHAR(255),
                OPT_OUT       BOOLEAN,
                PROVIDER      VARCHAR(255),
                constraint BLACKDUCK_USER_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.SYSTEM_STATUS
            (
                ID                        BIGINT not null,
                INITIALIZED_CONFIGURATION BOOLEAN,
                STARTUP_TIME              TIMESTAMP,
                constraint SYSTEM_STATUS_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.SYSTEM_MESSAGES
            (
                ID         SERIAL,
                CREATED_AT TIMESTAMP,
                SEVERITY   VARCHAR(50),
                CONTENT    VARCHAR(255),
                TYPE       VARCHAR(255),
                constraint SYSTEM_MESSAGES_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.POLARIS_ISSUES
            (
                ID             SERIAL,
                ISSUE_TYPE     VARCHAR(255),
                PREVIOUS_COUNT BIGINT,
                CURRENT_COUNT  BIGINT,
                PROJECT_ID     BIGINT,
                constraint POLARIS_ISSUES_KEY
                    primary key (ID),
                constraint FK_ISSUE_PROJECT
                    foreign key (PROJECT_ID) references ALERT.PROVIDER_PROJECTS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.RAW_NOTIFICATION_CONTENT
            (
                ID                     SERIAL,
                CREATED_AT             TIMESTAMP,
                PROVIDER               VARCHAR(255),
                PROVIDER_CREATION_TIME TIMESTAMP,
                NOTIFICATION_TYPE      VARCHAR(255),
                CONTENT                JSON,
                constraint RAW_NOTIFICATION_CONTENT_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.PROVIDER_USER_PROJECT_RELATION
            (
                PROVIDER_USER_ID    BIGINT not null,
                PROVIDER_PROJECT_ID BIGINT not null,
                constraint FK_PROVIDER_PROJECT_ID
                    foreign key (PROVIDER_PROJECT_ID) references ALERT.PROVIDER_PROJECTS (ID)
                        on delete cascade,
                constraint FK_PROVIDER_USER_ID
                    foreign key (PROVIDER_USER_ID) references ALERT.PROVIDER_USERS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.ROLES
            (
                ID       SERIAL,
                ROLENAME VARCHAR(255),
                CUSTOM   BOOLEAN default FALSE not null,
                constraint ROLE_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.SETTINGS_KEY
            (
                ID    SERIAL,
                KEY   VARCHAR(255),
                VALUE VARCHAR(255),
                constraint SETTINGS_KEY_KEY
                    primary key (ID),
                unique (KEY)
            );

            create table if not exists ALERT.REGISTERED_DESCRIPTORS
            (
                ID      SERIAL,
                TYPE_ID BIGINT,
                NAME    VARCHAR(255),
                constraint REGISTERED_DESCRIPTORS_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.DESCRIPTOR_TYPES
            (
                ID   SERIAL,
                TYPE VARCHAR(255),
                constraint DESCRIPTOR_TYPES_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.DEFINED_FIELDS
            (
                ID         SERIAL,
                SOURCE_KEY VARCHAR(255)          not null
                    unique,
                SENSITIVE  BOOLEAN default FALSE not null,
                constraint DEFINED_FIELDS_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.DESCRIPTOR_FIELDS
            (
                DESCRIPTOR_ID BIGINT not null,
                FIELD_ID      BIGINT not null,
                constraint DESCRIPTOR_FIELDS_KEY
                    primary key (DESCRIPTOR_ID, FIELD_ID),
                constraint FK_DESCRIPTOR_FIELD
                    foreign key (FIELD_ID) references ALERT.DEFINED_FIELDS (ID)
                        on delete cascade,
                constraint FK_FIELD_DESCRIPTOR
                    foreign key (DESCRIPTOR_ID) references ALERT.REGISTERED_DESCRIPTORS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.CONFIG_CONTEXTS
            (
                ID      SERIAL,
                CONTEXT VARCHAR(31)
                    unique,
                constraint CONFIG_CONTEXTS_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.PERMISSION_MATRIX
            (
                ROLE_ID       BIGINT  not null,
                OPERATIONS    INTEGER not null,
                DESCRIPTOR_ID BIGINT  not null,
                CONTEXT_ID    BIGINT  not null,
                constraint PERMISSION_MATRIX_KEY_UPDATED
                    primary key (ROLE_ID, OPERATIONS, DESCRIPTOR_ID, CONTEXT_ID),
                constraint FK_PERMISSION_CONTEXT_ID
                    foreign key (CONTEXT_ID) references ALERT.CONFIG_CONTEXTS (ID)
                        on delete cascade,
                constraint FK_PERMISSION_DESCRIPTOR_ID
                    foreign key (DESCRIPTOR_ID) references ALERT.REGISTERED_DESCRIPTORS (ID)
                        on delete cascade,
                constraint FK_PERMISSION_ROLE
                    foreign key (ROLE_ID) references ALERT.ROLES (ID)
                        on delete cascade
            );

            create table if not exists ALERT.DESCRIPTOR_CONFIGS
            (
                ID            SERIAL,
                DESCRIPTOR_ID BIGINT,
                CONTEXT_ID    BIGINT,
                CREATED_AT    TIMESTAMP,
                LAST_UPDATED  TIMESTAMP,
                constraint DESCRIPTOR_CONFIGS_KEY
                    primary key (ID),
                constraint FK_CONFIG_CONTEXT
                    foreign key (CONTEXT_ID) references ALERT.CONFIG_CONTEXTS (ID)
                        on delete cascade,
                constraint FK_CONFIG_DESCRIPTOR
                    foreign key (DESCRIPTOR_ID) references ALERT.REGISTERED_DESCRIPTORS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.FIELD_CONTEXTS
            (
                FIELD_ID   BIGINT not null,
                CONTEXT_ID BIGINT not null,
                constraint FIELD_CONTEXTS_KEY
                    primary key (FIELD_ID, CONTEXT_ID),
                constraint FK_CONTEXT_FIELD
                    foreign key (FIELD_ID) references ALERT.DEFINED_FIELDS (ID)
                        on delete cascade,
                constraint FK_FIELD_CONTEXT
                    foreign key (CONTEXT_ID) references ALERT.CONFIG_CONTEXTS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.CONFIG_GROUPS
            (
                CONFIG_ID BIGINT not null,
                JOB_ID    UUID   not null,
                constraint CONFIG_GROUPS_KEY
                    primary key (CONFIG_ID),
                constraint FK_CONFIG_GROUP_VALUE
                    foreign key (CONFIG_ID) references ALERT.DESCRIPTOR_CONFIGS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.FIELD_VALUES
            (
                ID          SERIAL,
                CONFIG_ID   BIGINT,
                FIELD_ID    BIGINT,
                FIELD_VALUE VARCHAR(512),
                constraint CONFIG_VALUES_KEY
                    primary key (ID),
                constraint FK_DEFINED_FIELD_VALUE
                    foreign key (FIELD_ID) references ALERT.DEFINED_FIELDS (ID)
                        on delete cascade,
                constraint FK_DESCRIPTOR_CONFIG_VALUE
                    foreign key (CONFIG_ID) references ALERT.DESCRIPTOR_CONFIGS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.USERS
            (
                ID               SERIAL,
                USERNAME         VARCHAR(2048)
                    unique,
                PASSWORD         VARCHAR(2048),
                EMAIL_ADDRESS    VARCHAR(2048),
                EXPIRED          BOOLEAN default FALSE,
                LOCKED           BOOLEAN default FALSE,
                PASSWORD_EXPIRED BOOLEAN default FALSE,
                ENABLED          BOOLEAN default TRUE,
                constraint USER_KEY
                    primary key (ID)
            );

            create table if not exists ALERT.USER_ROLES
            (
                USER_ID BIGINT not null,
                ROLE_ID BIGINT not null,
                constraint FK_ROLE_ID
                    foreign key (ROLE_ID) references ALERT.ROLES (ID)
                        on delete cascade,
                constraint FK_USER_ID
                    foreign key (USER_ID) references ALERT.USERS (ID)
                        on delete cascade
            );

            create table if not exists ALERT.AUDIT_ENTRIES
            (
                ID                SERIAL
                    primary key,
                ERROR_MESSAGE     VARCHAR(255),
                ERROR_STACK_TRACE VARCHAR,
                STATUS            VARCHAR(255),
                TIME_CREATED      TIMESTAMP,
                TIME_LAST_SENT    TIMESTAMP,
                COMMON_CONFIG_ID  UUID
            );

            create table if not exists ALERT.AUDIT_NOTIFICATION_RELATION
            (
                AUDIT_ENTRY_ID  BIGINT not null,
                NOTIFICATION_ID BIGINT not null,
                primary key (AUDIT_ENTRY_ID, NOTIFICATION_ID),
                constraint FK_AUDIT_ENTRY_ID
                    foreign key (AUDIT_ENTRY_ID) references ALERT.AUDIT_ENTRIES (ID)
                        on delete cascade,
                constraint FK_AUDIT_NOTIFICATION_ID
                    foreign key (NOTIFICATION_ID) references ALERT.RAW_NOTIFICATION_CONTENT (ID)
                        on delete cascade
            );
        </sql>
    </changeSet>
    <!-- Initialize contexts -->
    <changeSet author="gavink" id="2019-12-11-11-02-46-045">
        <preConditions onFail="MARK_RAN">
            <not>
                <sqlCheck expectedResult="2">select count(*) from ALERT.CONFIG_CONTEXTS</sqlCheck>
            </not>
        </preConditions>
        <sql dbms="postgresql" stripComments="true">
            insert into ALERT.CONFIG_CONTEXTS (ID, CONTEXT)
            select (1, 'GLOBAL')
            where not exists (
                select * from ALERT.CONFIG_CONTEXTS where CONTEXT = 'GLOBAL'
            );

            insert into ALERT.CONFIG_CONTEXTS (ID, CONTEXT)
            select (2, 'DISTRIBUTION')
            where not exists (
                select * from ALERT.CONFIG_CONTEXTS where CONTEXT = 'DISTRIBUTION'
            );
        </sql>
    </changeSet>
    <!-- Initialize descriptor types -->
    <changeSet author="gavink" id="2019-12-11-11-35-48-436">
        <preConditions onFail="MARK_RAN">
            <not>
                <sqlCheck expectedResult="3">select count(*) from ALERT.DESCRIPTOR_TYPES</sqlCheck>
            </not>
        </preConditions>
        <sql dbms="h2" stripComments="true">
            insert into ALERT.DESCRIPTOR_TYPES (ID, TYPE)
            select (1, 'CHANNEL')
            where not exists (
                select * from ALERT.DESCRIPTOR_TYPES where type = 'CHANNEL'
            );

            insert into ALERT.DESCRIPTOR_TYPES (ID, TYPE) select (2, 'PROVIDER')
            where not exists (
                select * from ALERT.DESCRIPTOR_TYPES where type = 'PROVIDER'
            );

            insert into ALERT.DESCRIPTOR_TYPES (ID, TYPE) select (3, 'COMPONENT')
            where not exists (
                select * from ALERT.DESCRIPTOR_TYPES where type = 'COMPONENT'
            );
        </sql>
    </changeSet>
    <!-- Initialize defined fields -->
    <changeSet author="gavink" id="2019-12-11-12-04-43-379">
        <preConditions onFail="MARK_RAN">
            <not>
                <sqlCheck expectedResult="167">select count(*) from ALERT.DEFINED_FIELDS</sqlCheck>
            </not>
        </preConditions>
        <sql dbms="postgresql" stripComments="true">
            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (1, 'blackduck.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'blackduck.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (2, 'blackduck.api.key', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'blackduck.api.key'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (3, 'blackduck.timeout', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'blackduck.timeout'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (4, 'channel.common.filter.by.project', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.filter.by.project'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (5, 'channel.common.project.name.pattern', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.project.name.pattern'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (6, 'channel.common.configured.project', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.configured.project'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (7, 'provider.distribution.notification.types', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'provider.distribution.notification.types'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (8, 'provider.distribution.format.type', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'provider.distribution.format.type'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (9, 'email.subject.line', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'email.subject.line'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (10, 'project.owner.only', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'project.owner.only'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (11, 'email.addresses', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'email.addresses'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (12, 'channel.common.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (13, 'channel.common.channel.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.channel.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (14, 'channel.common.provider.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.provider.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (15, 'channel.common.frequency', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.frequency'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (16, 'mail.smtp.user', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.user'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (17, 'mail.smtp.host', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.host'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (18, 'mail.smtp.port', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.port'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (19, 'mail.smtp.connectiontimeout', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.connectiontimeout'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (20, 'mail.smtp.timeout', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.timeout'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (21, 'mail.smtp.writetimeout', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.writetimeout'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (22, 'mail.smtp.from', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.from'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (23, 'mail.smtp.localhost', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.localhost'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (24, 'mail.smtp.localaddress', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.localaddress'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (25, 'mail.smtp.localport', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.localport'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (26, 'mail.smtp.ehlo', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ehlo'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (27, 'mail.smtp.auth', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (28, 'mail.smtp.auth.mechanisms', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.mechanisms'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (29, 'mail.smtp.auth.login.disable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.login.disable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (30, 'mail.smtp.auth.plain.disable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.plain.disable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (31, 'mail.smtp.auth.digest-md5.disable', false);

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (32, 'mail.smtp.auth.ntlm.disable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.ntlm.disable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (33, 'mail.smtp.auth.ntlm.domain', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.ntlm.domain'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (34, 'mail.smtp.auth.ntlm.flags', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.auth.ntlm.flags'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (35, 'mail.smtp.auth.xoauth2.disable', false);

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (36, 'mail.smtp.submitter', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.submitter'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (37, 'mail.smtp.dsn.notify', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.dsn.notify'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (38, 'mail.smtp.dsn.ret', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.dsn.ret'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (39, 'mail.smtp.allow8bitmime', false);

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (40, 'mail.smtp.sendpartial', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sendpartial'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (41, 'mail.smtp.sasl.enable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sasl.enable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (42, 'mail.smtp.sasl.mechanisms', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sasl.mechanisms'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (43, 'mail.smtp.sasl.authorizationid', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sasl.authorizationid'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (44, 'mail.smtp.sasl.realm', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sasl.realm'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (45, 'mail.smtp.sasl.usecanonicalhostname', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.sasl.usecanonicalhostname'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (46, 'mail.smtp.quitwait', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.quitwait'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (47, 'mail.smtp.reportsuccess', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.reportsuccess'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (48, 'mail.smtp.ssl.enable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ssl.enable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (49, 'mail.smtp.ssl.checkserveridentity', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ssl.checkserveridentity'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (50, 'mail.smtp.ssl.trust', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ssl.trust'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (51, 'mail.smtp.ssl.protocols', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ssl.protocols'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (52, 'mail.smtp.ssl.ciphersuites', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.ssl.ciphersuites'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (53, 'mail.smtp.starttls.enable', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.starttls.enable'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (54, 'mail.smtp.starttls.required', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.starttls.required'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (55, 'mail.smtp.proxy.host', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.proxy.host'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (56, 'mail.smtp.proxy.port', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.proxy.port'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (57, 'mail.smtp.socks.host', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.socks.host'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (58, 'mail.smtp.socks.port', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.socks.port'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (59, 'mail.smtp.mailextension', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.mailextension'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (60, 'mail.smtp.userset', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.userset'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (61, 'mail.smtp.noop.strict', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.noop.strict'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (62, 'mail.smtp.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'mail.smtp.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (72, 'channel.slack.webhook', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.slack.webhook'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (73, 'channel.slack.channel.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.slack.channel.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (74, 'channel.slack.channel.username', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.slack.channel.username'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (79, 'settings.proxy.host', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.proxy.host'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (80, 'settings.proxy.port', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.proxy.port'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (81, 'settings.proxy.username', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.proxy.username'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (82, 'settings.proxy.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.proxy.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (83, 'settings.ldap.enabled', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.enabled'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (84, 'settings.ldap.server', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.server'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (85, 'settings.ldap.manager.dn', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.manager.dn'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (86, 'settings.ldap.manager.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.manager.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (87, 'settings.ldap.authentication.type', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.authentication.type'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (88, 'settings.ldap.referral', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.referral'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (89, 'settings.ldap.user.search.base', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.user.search.base'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (90, 'settings.ldap.user.search.filter', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.user.search.filter'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (91, 'settings.ldap.user.dn.patterns', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.user.dn.patterns'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (92, 'settings.ldap.user.attributes', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.user.attributes'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (93, 'settings.ldap.group.search.base', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.group.search.base'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (94, 'settings.ldap.group.search.filter', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.group.search.filter'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (95, 'settings.ldap.group.role.attribute', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.ldap.group.role.attribute'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (96, 'scheduling.accumulator.next.run', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.accumulator.next.run'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (97, 'scheduling.daily.processor.hour', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.daily.processor.hour'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (98, 'scheduling.daily.processor.next.run', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.daily.processor.next.run'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (99, 'scheduling.purge.data.frequency', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.purge.data.frequency'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (100, 'scheduling.purge.data.next.run', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.purge.data.next.run'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (101, 'settings.user.default.admin.email', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.user.default.admin.email'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (102, 'settings.user.default.admin.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.user.default.admin.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (103, 'settings.encryption.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.encryption.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (104, 'settings.encryption.global.salt', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.encryption.global.salt'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (105, 'settings.startup.environment.variable.override', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.startup.environment.variable.override'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (106, 'polaris.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'polaris.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (107, 'polaris.access.token', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'polaris.access.token'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (108, 'polaris.timeout', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'polaris.timeout'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (114, 'settings.saml.enabled', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.enabled'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (115, 'settings.saml.force.auth', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.force.auth'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (116, 'settings.saml.metadata.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.metadata.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (117, 'settings.saml.entity.id', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.entity.id'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (118, 'settings.saml.entity.base.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.entity.base.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (119, 'scheduling.polaris.next.run', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'scheduling.polaris.next.run'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (120, 'jira.cloud.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.cloud.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (121, 'jira.cloud.admin.email.address', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.cloud.admin.email.address'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (122, 'jira.cloud.admin.api.token', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.cloud.admin.api.token'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (123, 'jira.cloud.configure.plugin', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.cloud.configure.plugin'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (124, 'channel.jira.cloud.add.comments', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.add.comments'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (125, 'channel.jira.cloud.issue.creator', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.issue.creator'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (126, 'channel.jira.cloud.project.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.project.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (127, 'channel.jira.cloud.issue.type', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.issue.type'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (128, 'channel.jira.cloud.resolve.workflow', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.resolve.workflow'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (129, 'channel.jira.cloud.reopen.workflow', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.cloud.reopen.workflow'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (134, 'email.additional.addresses', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'email.additional.addresses'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (135, 'email.additional.addresses.only', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'email.additional.addresses.only'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (136, 'settings.saml.metadata.file', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.metadata.file'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (137, 'settings.role.mapping.name.admin', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.role.mapping.name.admin'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (138, 'settings.role.mapping.name.job.manager', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.role.mapping.name.job.manager'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (139, 'settings.role.mapping.name.user', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.role.mapping.name.user'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (140, 'settings.saml.role.attribute.mapping.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'settings.saml.role.attribute.mapping.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (145, 'channel.msteams.webhook', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.msteams.webhook'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (150, 'channel.jira.server.add.comments', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.add.comments'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (151, 'channel.jira.server.issue.creator', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.issue.creator'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (152, 'channel.jira.server.project.name', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.project.name'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (153, 'channel.jira.server.issue.type', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.issue.type'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (154, 'channel.jira.server.resolve.workflow', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.resolve.workflow'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (155, 'channel.jira.server.reopen.workflow', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.jira.server.reopen.workflow'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (156, 'jira.server.url', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.server.url'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (157, 'jira.server.username', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.server.username'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (158, 'jira.server.password', true)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.server.password'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (159, 'jira.server.configure.plugin', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'jira.server.configure.plugin'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (160, 'channel.common.enabled', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'channel.common.enabled'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (165, 'blackduck.policy.notification.filter', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'blackduck.policy.notification.filter'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (166, 'blackduck.vulnerability.notification.filter', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'blackduck.vulnerability.notification.filter'
                );

            insert into ALERT.DEFINED_FIELDS (ID, SOURCE_KEY, SENSITIVE)
            select (167, 'email.attachment.format', false)
            where not exists (
            select * from ALERT.DEFINED_FIELDS where SOURCE_KEY = 'email.attachment.format'
                );
        </sql>
    </changeSet>
</databaseChangeLog>
