package com.synopsys.integration.alert.provider.blackduck.collector.builder.util;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.util.List;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;

import com.synopsys.integration.alert.common.message.model.LinkableItem;
import com.synopsys.integration.alert.provider.blackduck.TestBlackDuckProperties;
import com.synopsys.integration.alert.test.common.TestAlertProperties;
import com.synopsys.integration.alert.test.common.TestTags;
import com.synopsys.integration.bdio.model.Forge;
import com.synopsys.integration.bdio.model.externalid.ExternalId;
import com.synopsys.integration.blackduck.api.generated.enumeration.ProjectVersionDistributionType;
import com.synopsys.integration.blackduck.api.generated.view.ComponentVersionView;
import com.synopsys.integration.blackduck.api.generated.view.ProjectVersionComponentView;
import com.synopsys.integration.blackduck.api.manual.temporary.component.ProjectRequest;
import com.synopsys.integration.blackduck.api.manual.temporary.component.ProjectVersionRequest;
import com.synopsys.integration.blackduck.api.manual.temporary.enumeration.ProjectVersionPhaseType;
import com.synopsys.integration.blackduck.configuration.BlackDuckServerConfig;
import com.synopsys.integration.blackduck.service.BlackDuckApiClient;
import com.synopsys.integration.blackduck.service.BlackDuckServicesFactory;
import com.synopsys.integration.blackduck.service.dataservice.ComponentService;
import com.synopsys.integration.blackduck.service.dataservice.ProjectBomService;
import com.synopsys.integration.blackduck.service.dataservice.ProjectService;
import com.synopsys.integration.blackduck.service.model.ProjectVersionWrapper;
import com.synopsys.integration.exception.IntegrationException;
import com.synopsys.integration.log.IntLogger;
import com.synopsys.integration.log.LogLevel;
import com.synopsys.integration.log.PrintStreamIntLogger;
import com.synopsys.integration.rest.HttpUrl;

//TODO move this to the provider sub-project when the TestBlackDuckProperties is moved to test-common
@Tag(TestTags.DEFAULT_INTEGRATION)
public class VulnerabilityUtilTestIT {
    private static BlackDuckServicesFactory blackDuckServicesFactory;
    private static ProjectVersionWrapper projectVersionWrapper;

    @BeforeAll
    public static void testSetup() throws Exception {
        TestAlertProperties testAlertProperties = new TestAlertProperties();
        TestBlackDuckProperties testBlackDuckProperties = new TestBlackDuckProperties(testAlertProperties, TestBlackDuckProperties.createMockedProxyManger());
        IntLogger logger = new PrintStreamIntLogger(System.out, LogLevel.INFO);
        BlackDuckServerConfig blackDuckServerConfig = testBlackDuckProperties.createHubServerConfigWithCredentials(logger);
        blackDuckServicesFactory = blackDuckServerConfig.createBlackDuckServicesFactory(logger);

        ProjectService projectService = blackDuckServicesFactory.createProjectService();

        ProjectVersionRequest projectVersionRequest = new ProjectVersionRequest();
        projectVersionRequest.setDistribution(ProjectVersionDistributionType.INTERNAL);
        projectVersionRequest.setPhase(ProjectVersionPhaseType.DEVELOPMENT);
        projectVersionRequest.setVersionName("1.0.0-test");

        ProjectRequest projectRequest = new ProjectRequest();
        projectRequest.setVersionRequest(projectVersionRequest);
        projectRequest.setProjectLevelAdjustments(true);
        projectRequest.setName("VulnerabilityUtilTest");

        projectVersionWrapper = projectService.createProject(projectRequest);

        ProjectBomService projectBomService = blackDuckServicesFactory.createProjectBomService();
        ExternalId commonsFileUploadExternalId = new ExternalId(Forge.SOURCEFORGE);
        commonsFileUploadExternalId.setName("springframework");
        commonsFileUploadExternalId.setVersion("0.9");

        projectBomService.addComponentToProjectVersion(commonsFileUploadExternalId, projectVersionWrapper.getProjectVersionView());
    }

    @AfterAll
    public static void testCleanUp() throws Exception {
        BlackDuckApiClient blackDuckApiClient = blackDuckServicesFactory.getBlackDuckApiClient();
        blackDuckApiClient.delete(projectVersionWrapper.getProjectView());
    }

    @Test
    public void testGetRemediationItems() throws IntegrationException {
        ProjectBomService projectBomService = blackDuckServicesFactory.createProjectBomService();
        List<ProjectVersionComponentView> componentsForProjectVersion = projectBomService.getComponentsForProjectVersion(projectVersionWrapper.getProjectVersionView());
        ProjectVersionComponentView projectVersionComponentView = componentsForProjectVersion.get(0);

        String componentVersionURL = projectVersionComponentView.getComponentVersion();
        BlackDuckApiClient blackDuckApiClient = blackDuckServicesFactory.getBlackDuckApiClient();
        ComponentVersionView componentVersionView = blackDuckApiClient.getResponse(new HttpUrl(componentVersionURL), ComponentVersionView.class);

        ComponentService componentService = blackDuckServicesFactory.createComponentService();
        List<LinkableItem> remediationItems = VulnerabilityUtil.getRemediationItems(componentService, componentVersionView);
        assertNotNull(remediationItems);
        assertFalse(remediationItems.isEmpty());

    }
}
