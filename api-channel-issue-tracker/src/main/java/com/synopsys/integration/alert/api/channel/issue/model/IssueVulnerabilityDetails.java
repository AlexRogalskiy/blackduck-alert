/*
 * api-channel-issue-tracker
 *
 * Copyright (c) 2021 Synopsys, Inc.
 *
 * Use subject to the terms and conditions of the Synopsys End User Software License and Maintenance Agreement. All rights reserved worldwide.
 */
package com.synopsys.integration.alert.api.channel.issue.model;

import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import com.synopsys.integration.alert.api.common.model.AlertSerializableModel;
import com.synopsys.integration.alert.processor.api.extract.model.project.ComponentConcernSeverity;

public class IssueVulnerabilityDetails extends AlertSerializableModel {
    private final boolean allComponentVulnerabilitiesRemediated;
    private final List<IssueVulnerabilityModel> vulnerabilitiesAdded;
    private final List<IssueVulnerabilityModel> vulnerabilitiesUpdated;
    private final List<IssueVulnerabilityModel> vulnerabilitiesDeleted;

    public IssueVulnerabilityDetails(
        boolean allComponentVulnerabilitiesRemediated,
        List<IssueVulnerabilityModel> vulnerabilitiesAdded,
        List<IssueVulnerabilityModel> vulnerabilitiesUpdated,
        List<IssueVulnerabilityModel> vulnerabilitiesDeleted
    ) {
        this.allComponentVulnerabilitiesRemediated = allComponentVulnerabilitiesRemediated;
        this.vulnerabilitiesAdded = vulnerabilitiesAdded;
        this.vulnerabilitiesUpdated = vulnerabilitiesUpdated;
        this.vulnerabilitiesDeleted = vulnerabilitiesDeleted;
    }

    public boolean areAllComponentVulnerabilitiesRemediated() {
        return allComponentVulnerabilitiesRemediated;
    }

    public List<IssueVulnerabilityModel> getVulnerabilitiesAdded() {
        return vulnerabilitiesAdded;
    }

    public List<IssueVulnerabilityModel> getVulnerabilitiesUpdated() {
        return vulnerabilitiesUpdated;
    }

    public List<IssueVulnerabilityModel> getVulnerabilitiesDeleted() {
        return vulnerabilitiesDeleted;
    }

    //TODO: Determine if we only need to get the highest from vulnerabilities ADDED.
    public String getHighestVulnerabilityAdded() {
        ComponentConcernSeverity highestSeverity = Collections.min(vulnerabilitiesAdded, Comparator.comparing(IssueVulnerabilityModel::getSeverity)).getSeverity();
        return highestSeverity.getVulnerabilityLabel();
    }

}
