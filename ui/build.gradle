import groovy.json.JsonOutput
import groovy.json.JsonSlurper

//plugins {
//    id 'com.moowork.node' version '1.3.1'
//}

ext.moduleName = 'com.synopsys.integration.alert.ui'

task cleanBundles(type: Delete) {
    File staticResourcesDirectory = new File('src/main/static')
    if (staticResourcesDirectory.exists()) {
        println "Deleting ${staticResourcesDirectory.canonicalPath}"
        staticResourcesDirectory.deleteDir()
    }
}

task updateNpmVersion(type: Task) {
    final def packageJsonFile = new File("${project.projectDir}/package.json")
    def packageSlurper = new JsonSlurper()
    def packageJson = packageSlurper.parse file("${project.projectDir}/package.json")
    if (packageJson.version != version) {
        packageJson.version = version

        final def updatedPackageJson = JsonOutput.toJson(packageJson)

        packageJsonFile.delete()
        packageJsonFile << JsonOutput.prettyPrint(updatedPackageJson)
    }
}
//npm_run() {
//    args = ['build']
//}

task webInstall(type: Exec) {
    commandLine 'npm', 'install', '--cache', "${project.buildDir}/npm-cache"
}

task webBuild(type: Exec, dependsOn: [webInstall]) {
    commandLine 'npm', 'run', 'build', '--cache', "${project.buildDir}/npm-cache"
}

//task webpack(type: Exec) {
//    inputs.file("${project.projectDir}/package-lock.json")
//    inputs.file("${project.projectDir}/webpack.config.js")
//    inputs.dir("${project.projectDir}/src/main")
//
//    commandLine "${project.projectDir}/node_modules/.bin/webpack"
//}

task copyStaticWebContent(type: Copy) {
    from("${project.projectDir}/src/main/css") {
        into 'css'
    }
    from("${project.projectDir}/src/main/img") {
        into 'img'
    }
    into "${project.buildDir}/resources/main/static"
}
tasks.copyStaticWebContent.finalizedBy(webBuild)
tasks.webBuild.mustRunAfter(updateNpmVersion)
tasks.webBuild.mustRunAfter(copyStaticWebContent)
tasks.clean.finalizedBy(cleanBundles)
