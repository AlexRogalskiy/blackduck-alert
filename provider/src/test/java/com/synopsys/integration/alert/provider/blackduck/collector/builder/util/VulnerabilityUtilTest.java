package com.synopsys.integration.alert.provider.blackduck.collector.builder.util;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.math.BigDecimal;
import java.util.Optional;

import org.junit.jupiter.api.Test;

import com.synopsys.integration.alert.common.message.model.LinkableItem;
import com.synopsys.integration.alert.provider.blackduck.collector.builder.MessageBuilderConstants;
import com.synopsys.integration.alert.provider.blackduck.collector.builder.model.UpgradeGuidanceRiskView;
import com.synopsys.integration.alert.provider.blackduck.collector.builder.model.UpgradeGuidanceView;

public class VulnerabilityUtilTest {

    @Test
    public void testCreateUpgradeGuidanceMissing() {
        Optional<LinkableItem> upgradeGuidanceOptional = VulnerabilityUtil.createUpgradeGuidance(null, MessageBuilderConstants.LABEL_GUIDANCE_LONG_TERM);
        assertTrue(upgradeGuidanceOptional.isEmpty());
    }

    @Test
    public void testCreateUpgradeGuidance() {
        String versionURL = "versionURL";
        String versionName = "versionName";
        UpgradeGuidanceRiskView upgradeGuidanceRiskView = new UpgradeGuidanceRiskView(BigDecimal.TEN, BigDecimal.ZERO, BigDecimal.ONE, BigDecimal.ONE);
        UpgradeGuidanceView upgradeGuidanceView = new UpgradeGuidanceView(null, null, null, null, versionURL, versionName, upgradeGuidanceRiskView);
        Optional<LinkableItem> upgradeGuidanceOptional = VulnerabilityUtil.createUpgradeGuidance(upgradeGuidanceView, MessageBuilderConstants.LABEL_GUIDANCE_LONG_TERM);
        assertTrue(upgradeGuidanceOptional.isPresent());
        LinkableItem upgradeGuidance = upgradeGuidanceOptional.get();
        Optional<String> url = upgradeGuidance.getUrl();
        assertTrue(url.isPresent());
        assertEquals(versionURL, url.get());
        String name = upgradeGuidance.getName();
        assertEquals(MessageBuilderConstants.LABEL_GUIDANCE_LONG_TERM, name);
        String value = upgradeGuidance.getValue();
        String versionText = versionName + " (Vulnerabilities: Critical: 10, Medium: 1, Low: 1)";
        assertEquals(versionText, value);
    }
}
