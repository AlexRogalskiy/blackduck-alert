<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">
    <changeSet author="gavink" id="2020-02-12-15-43-59-483">
        <createProcedure schemaName="ALERT" dbms="postgresql">
            CREATE OR REPLACE FUNCTION GET_OLD_BLACK_DUCK_PROVIDER_CONFIG_ID()
            RETURNS BIGINT AS $result$
                DECLARE result BIGINT;
                BEGIN
                    select ID
                    into result
                    from ALERT.DESCRIPTOR_CONFIGS where CONTEXT_ID = GET_CONTEXT_ID('GLOBAL') and DESCRIPTOR_ID = GET_DESCRIPTOR_ID('provider_blackduck');
                    RETURN result;
                END;
            $result$
            LANGUAGE plpgsql;
        </createProcedure>
        <createProcedure schemaName="ALERT" dbms="h2">
            CREATE ALIAS IF NOT EXISTS GET_OLD_BLACK_DUCK_PROVIDER_CONFIG_ID AS $$
                java.lang.Integer getOldBlackDuckProviderConfigId(final java.sql.Connection connection) throws java.sql.SQLException {
                    try (final java.sql.Statement statement = connection.createStatement()) {
                        final java.sql.ResultSet resultSet = statement.executeQuery("select ID from ALERT.DESCRIPTOR_CONFIGS where CONTEXT_ID = GET_CONTEXT_ID('GLOBAL') and DESCRIPTOR_ID = GET_DESCRIPTOR_ID('provider_blackduck');");
                        if (resultSet.next()) {
                            return resultSet.getInt("ID");
                        } else {
                            throw new java.sql.SQLException("No values returned for that query");
                        }
                    }
                }
            $$;
        </createProcedure>
    </changeSet>

</databaseChangeLog>
